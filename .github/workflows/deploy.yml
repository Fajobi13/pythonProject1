name: Build and Deploy Dockerized Flask App

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub using credentials stored in GitHub Secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .

    # Step 5: Push the Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Deploy only after the build job succeeds

    steps:
    # Step 1: Deploy the Dockerized app on a remote server (via SSH)
    - name: Deploy to Remote Server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          docker stop flask-app || true
          docker rm flask-app || true
          docker run -d -p 80:4000 --name flask-app ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
